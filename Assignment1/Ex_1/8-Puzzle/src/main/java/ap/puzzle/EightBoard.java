package ap.puzzle;

import java.beans.PropertyVetoException;
import java.beans.VetoableChangeSupport;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

/**
 *
 * @author Simone Passera
 */
public class EightBoard extends javax.swing.JFrame implements Serializable {
    private final ArrayList<EightTile> tiles = new ArrayList<>();
    private final VetoableChangeSupport vcs = new VetoableChangeSupport(this);

    /**
     * Creates new form EightBoard
     */
    public EightBoard() {
        initComponents();
        
        tiles.add(eightTile1);
        tiles.add(eightTile2);
        tiles.add(eightTile3);
        tiles.add(eightTile4);
        tiles.add(eightTile5);
        tiles.add(eightTile6);
        tiles.add(eightTile7);
        tiles.add(eightTile8);
        tiles.add(eightTile9);
        
        for (EightTile t : tiles) {
            // Register EightController to all tiles for property "setHole" 
             t.addVetoableChangeListener(eightController);
             // Register all tiles to EightController for property "holeMoved"
             eightController.addPropertyChangeListener("holeMoved",t);
             // Register all tiles to EightBoard for property "restartBoard"
             addPropertyChangeListener("restartBoard",t);
        }
        
        // Register tile in position 1 to EightBoard for property "flip"
        addPropertyChangeListener("flip",eightTile1);
        
        // Register tile in position 2 to tile in position 1 for property "setLabel"
        eightTile1.addPropertyChangeListener("setLabel",eightTile2);
        // Register tile in position 1 to tile in position 2 for property "setLabel"
        eightTile2.addPropertyChangeListener("setLabel",eightTile1);
        
        // Register EightController to EightBoard for property "restartBoard"
        addPropertyChangeListener("restartBoard",eightController);
        // Register EightController to EightBoard for property "flipRequest"
        vcs.addVetoableChangeListener("flipRequest",eightController);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        eightTile1 = new ap.puzzle.EightTile(1);
        eightTile2 = new ap.puzzle.EightTile(2);
        eightTile3 = new ap.puzzle.EightTile(3);
        eightTile4 = new ap.puzzle.EightTile(4);
        eightTile5 = new ap.puzzle.EightTile(5);
        eightTile6 = new ap.puzzle.EightTile(6);
        eightTile7 = new ap.puzzle.EightTile(7);
        eightTile8 = new ap.puzzle.EightTile(8);
        eightTile9 = new ap.puzzle.EightTile(9);
        eightController = new ap.puzzle.EightController();
        restart = new javax.swing.JButton();
        flip = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("8 Puzzle");
        setBackground(new java.awt.Color(83, 92, 104));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel1.setLayout(new java.awt.GridLayout(3, 3));

        eightTile1.setText("eightTile1");
        eightTile1.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jPanel1.add(eightTile1);

        eightTile2.setText("eightTile2");
        eightTile2.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jPanel1.add(eightTile2);

        eightTile3.setText("eightTile3");
        eightTile3.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jPanel1.add(eightTile3);

        eightTile4.setText("eightTile4");
        eightTile4.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jPanel1.add(eightTile4);

        eightTile5.setText("eightTile5");
        eightTile5.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jPanel1.add(eightTile5);

        eightTile6.setText("eightTile6");
        eightTile6.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jPanel1.add(eightTile6);

        eightTile7.setText("eightTile7");
        eightTile7.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jPanel1.add(eightTile7);

        eightTile8.setText("eightTile8");
        eightTile8.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jPanel1.add(eightTile8);

        eightTile9.setText("eightTile9");
        eightTile9.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jPanel1.add(eightTile9);

        eightController.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eightController.setText("CTRL");
        eightController.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N

        restart.setBackground(new java.awt.Color(247, 89, 21));
        restart.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        restart.setText("RESTART");
        restart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartActionPerformed(evt);
            }
        });

        flip.setBackground(new java.awt.Color(6, 134, 208));
        flip.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        flip.setText("FLIP");
        flip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flipActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eightController, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(restart, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(flip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(eightController, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(flip, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(restart, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void restartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartActionPerformed
        restartBoard();
    }//GEN-LAST:event_restartActionPerformed

    private void flipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flipActionPerformed
        try {
            // Control is performed by the EightController
            vcs.fireVetoableChange("flipRequest", null, null);  
            // Control passed, then sends the "flip" event to tile in position 1
            firePropertyChange("flip", null, null);
        } catch (PropertyVetoException ex) {}
    }//GEN-LAST:event_flipActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EightBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EightBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EightBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EightBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            EightBoard board = new EightBoard();
            
            board.restartBoard();
            board.setVisible(true);
        });
    }
    
    private void restartBoard() {
        ArrayList<Integer> configuration = new ArrayList<>(Arrays.asList(1,2,3,4,5,6,7,8)); 
        Collections.shuffle(configuration);
        configuration.add(9);
        
        // Send "restartBoard" event to EightController and the new configuration to all tiles
        firePropertyChange("restartBoard", null, configuration);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ap.puzzle.EightController eightController;
    private ap.puzzle.EightTile eightTile1;
    private ap.puzzle.EightTile eightTile2;
    private ap.puzzle.EightTile eightTile3;
    private ap.puzzle.EightTile eightTile4;
    private ap.puzzle.EightTile eightTile5;
    private ap.puzzle.EightTile eightTile6;
    private ap.puzzle.EightTile eightTile7;
    private ap.puzzle.EightTile eightTile8;
    private ap.puzzle.EightTile eightTile9;
    private javax.swing.JButton flip;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton restart;
    // End of variables declaration//GEN-END:variables
}
